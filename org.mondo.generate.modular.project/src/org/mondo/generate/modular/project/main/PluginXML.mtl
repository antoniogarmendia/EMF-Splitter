[comment encoding = UTF-8 /]
[module PluginXML('http://www.eclipse.org/emf/2002/Ecore','http://mondo.org/runtimePatterns','http://www.eclipse.org/emf/2002/GenModel')]
[import org::mondo::generate::modular::project::main::requests::global_queriesModularProject /]

[template public PluginXML(anProjectName : String, anPatternInstance : PatternInstance, anEObjectGenModel : GenModel)]

[file ('plugin.xml',false, 'UTF-8')]
<plugin>
   <extension-point id="[Get_ProjectClass(anPatternInstance).name/]ModularBuilders" name="[anProjectName/].builders" schema="schema/[Get_ProjectClass(anPatternInstance).name/]ModularBuilders.exsd"/>	
   <extension
         point="org.eclipse.ui.newWizards">
	  <!-- PROJECT CATEGORY -->
      <category
            id="[anProjectName/].project[Get_ProjectClass(anPatternInstance).name/]"
            name="[Get_ProjectClass(anPatternInstance).name/]">
      </category>
	  <!-- PACKAGE CATEGORY -->	
	<category
            id="[anProjectName/].project[Get_ProjectClass(anPatternInstance).name/].Packages"
            name="[Get_ProjectClass(anPatternInstance).name/] Folders"
			parentCategory="[anProjectName/].project[Get_ProjectClass(anPatternInstance).name/]">
      </category> 
	  <!-- FILE CATEGORY -->
	  <category
            id="[anProjectName/].project[Get_ProjectClass(anPatternInstance).name/].Files"
            name="[Get_ProjectClass(anPatternInstance).name/] Files"
			parentCategory="[anProjectName/].project[Get_ProjectClass(anPatternInstance).name/]">
      </category>	  
     <wizard
            category="[anProjectName/].project[Get_ProjectClass(anPatternInstance).name/]"
            class="[anProjectName.toLower()/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/][getProperty('prefix_name')/].wizard.[Get_ProjectClass(anPatternInstance).name/]NewProjectWizard"
            id="[anProjectName/].[Get_ProjectClass(anPatternInstance).name.toLower()/].[Get_ProjectClass(anPatternInstance).name/]NewProject"
            name="[Get_ProjectClass(anPatternInstance).name/] Project"
            project="true"
			[let path : String = Get_Pro_Path_Icon(anPatternInstance)]
			icon="[getPathIcon(path)/]">
			[/let]
      </wizard>
	<!--WIZARD PACKAGE CATEGORY -->
	[for (c :  ClassRoleInstance | anPatternInstance.Get_FolderClassRoleInstance()->union(anPatternInstance.Get_ProjectClassRoleInstance()
																						 ->select(anClassRoleInstance : ClassRoleInstance | anClassRoleInstance.referenceInstances
																						 ->select(ref : ReferenceRoleInstance | ref.element.eType.name.toString() = anClassRoleInstance.element.name.toString())->size() > 0)->asSequence()))]	
	 <wizard
			category="[anProjectName/].project[Get_ProjectClass(anPatternInstance).name/]/[anProjectName/].project[Get_ProjectClass(anPatternInstance).name/].Packages"
			[let path : String = c.Get_ClassRoleInstance_Folder_Icon()]
			icon="[getPathIcon(path)/]"
			[/let]
			class="[anProjectName.toLower()/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/][getProperty('prefix_name')/].wizard.folder.[c.element.name/]CreateFolderWizard"
			name="[c.element.name/] Folder"
			id="[anProjectName/].[c.element.name.toLower()/].[c.element.name.toLower()/]NewPackage"
			project="false"
	 		>	
	 </wizard>
	[/for]
	<!--WIZARD FILE CATEGORY -->
	
	[for (c :  ClassRoleInstance | anPatternInstance.Get_FileClassRoleInstance())]
	  <wizard
			category="[anProjectName/].project[Get_ProjectClass(anPatternInstance).name/]/[anProjectName/].project[Get_ProjectClass(anPatternInstance).name/].Files"
			[let path : String = c.Get_ClassRoleInstance_File_Icon()]
			icon="[getPathIcon(path)/]"
			[/let]
			class="[anProjectName.toLower()/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/][getProperty('prefix_name')/].wizard.file.[c.element.name/]CreateFileWizard"
			name="[c.element.name/] File"
			id="[anProjectName/].[c.element.name.toLower()/].[c.element.name.toLower()/]NewFile"
			project="false"
	 		>	
	 </wizard>		
 	[/for]
   </extension>
   <!--MULTI-PAGE EDITOR PAGE EXTENSION-->  
	<extension
         point="org.eclipse.ui.editors">
	
	[if(anPatternInstance.Get_FileClassRoleInstance().Get_ClassRoleInstance_EAttribute('extension')->size()>0)]
	[for (c : ClassRoleInstance | anPatternInstance.Get_FileClassRoleInstance())]
	[let genPackage : GenPackage =  getGenClassFromEClass(c.element,anEObjectGenModel).eContainer().oclAsType(GenPackage)]
	<editor
		name = "[c.Get_ClassRoleInstance_EAttribute('extension').toUpperFirst()/]  Model Editor"
		extensions = "[c.Get_ClassRoleInstance_EAttribute('extension')/]"
		[if(anPatternInstance.Get_Extension_Icon(c.Get_ClassRoleInstance_EAttribute('extension'))->size() <= 0)]
		icon = "[getProperty('def_file_icon') /]"
		[elseif (anPatternInstance.Get_Extension_Icon(c.Get_ClassRoleInstance_EAttribute('extension'))->first().Get_ClassRoleInstance_EAttribute('icon').toString()='null')]
				icon = "[getProperty('def_file_icon') /]"
		[else]
		[let path : String = anPatternInstance.Get_Extension_Icon(c.Get_ClassRoleInstance_EAttribute('extension'))->first().Get_ClassRoleInstance_EAttribute('icon')]
		icon = "[getPathIcon(path)/]"
		[/let]
		[/if]
		contributorClass="[anProjectName.toLower()/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/][getProperty('prefix_name')/].editors.[genPackage.prefix/]ModularMultiPageEditorContributor"
		class = "[anProjectName.toLower()/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/][getProperty('prefix_name')/].editors.[genPackage.prefix/]ModularMultiPageEditor"
		id="[anProjectName/].project[Get_ProjectClass(anPatternInstance).name.toString().toLower()/].editors.FigureEditor[c.Get_ClassRoleInstance_EAttribute('extension').toUpperFirst()/]"
		default="true">
	</editor>
	[/let]
	[/for]	
	[else]
	<editor
		name = "Default Model Editor"
		extensions = "[getProperty('default_extension')/]"
		icon = "[getProperty('def_file_icon') /]"
		contributorClass="[anProjectName.toLower()/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/][getProperty('prefix_name')/].editors.MultiPageEditorContributor"
		class = "[anProjectName/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/].editors.MultiPageEditor"
		id="[anProjectName/].project[Get_ProjectClass(anPatternInstance).name.toString().toLower()/].editors.FigureEditor"
		default="true">
	</editor>
	[/if]
	</extension>
	<!--XMI FILE EXTENSION PARSER-->
	<extension
       point="org.eclipse.emf.ecore.extension_parser">
	[if(anPatternInstance.Get_FileClassRoleInstance().Get_ClassRoleInstance_EAttribute('extension')->size()>0)]
	[let SeqExtension : Sequence(EString) = anPatternInstance.Get_FileClassRoleInstance().Get_ClassRoleInstance_EAttribute('extension')
									->asSet()->intersection(anPatternInstance.Get_FileClassRoleInstance().Get_ClassRoleInstance_EAttribute('extension')->asSet())
									->asSequence()] 
	[for (ext : EString | SeqExtension)]
	<parser
          class="org.mondo.generate.modular.project.general.create.project.main.api.PerformantXMIResourceFactoryImpl"
          type="[ext/]">
    </parser>
	[/for]
	[/let]
	[else]
	<parser
          class="org.mondo.generate.modular.project.general.create.project.main.api.PerformantXMIResourceFactoryImpl"
          type="[getProperty('default_extension')/]">
    </parser>
	[/if]
	<!--XMI FILE EXTENSION PARSER FOR PACKAGES-->
	[for (c : ClassRoleInstance | anPatternInstance.Get_FolderClassRoleInstance())]
		<parser
          class="org.mondo.generate.modular.project.general.create.project.main.api.PerformantXMIResourceFactoryImpl"
          type="[i/]">
		</parser>
	[/for]	
	</extension>
	<!--PROJECT MODULAR NATURE-->
   <extension
         id="ModularNature"
         name="Modular Nature"
         point="org.eclipse.core.resources.natures">
         <runtime>
        	 <run class="[anProjectName.toLower()/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/][getProperty('prefix_name')/].wizard.[Get_ProjectClass(anPatternInstance).name.toString() /]NewProjectNature">
         </run>
      </runtime>
		<builder
               id="[anProjectName.toLower()/].[getProperty('prefix_name')/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/].ModularIncrementalProjectBuilder">
         </builder>
   </extension>
   <extension
         id="ModularIncrementalProjectBuilder"
         name="Modular Incremental Builder"
         point="org.eclipse.core.resources.builders">
      <builder
            callOnEmptyDelta="false"
            hasNature="true"
            isConfigurable="false">
         <run
               class="[anProjectName.toLower()/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/][getProperty('prefix_name')/].wizard.ModularIncrementalProjectBuilder">
         </run></builder>
   </extension>
   <extension
         point="org.eclipse.ui.ide.projectNatureImages">
         <image
			[let path : String = anPatternInstance.Get_Pro_Path_Icon()]
            icon="[getPathIcon(path)/]"
			[/let]
            id="[anProjectName/][Get_ProjectClass(anPatternInstance).name.toString().toLower() /].image.Folder"
            natureId="[anProjectName/].[getProperty('prefix_name')/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/].ModularNature">
      </image>
   </extension> 
   <!-- PROJECT DECORATOR -->
	<extension
         point="org.eclipse.ui.decorators">
      <decorator 
       	adaptable="true"
            id="resources.folder.decorator.[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/]"
            label="Folder Resource Decorator"
            lightweight="true"
            location="REPLACE"
            state="true"
            objectClass="org.eclipse.core.resources.IResource"
            class="[anProjectName.toLower()/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/][getProperty('prefix_name')/].decorator.ModularProjectDecorator">
      </decorator>
   </extension> 
    <!-- PROPERTIES VIEW-->
   <extension
		point = "org.eclipse.jdt.ui.javaElementFilters" >
		<filter
            class="[anProjectName.toLower()/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/][getProperty('prefix_name')/].Package_Explorer_Selection"
            description="Package_Explorer_Selection"
            enabled="true"
            id="[anProjectName/].[getProperty('prefix_name')/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/].filter"
            name="Selection_Package"
            targetId="org.eclipse.jdt.ui.PackageExplorer">
      </filter>
   </extension>
	<!-- POPUPMENUS FOR THE PROJECT-->
	 <extension
         point="org.eclipse.ui.menus">
      <menuContribution
            allPopups="false"
            locationURI="popup:org.eclipse.ui.popup.any?after=group.new">
         <menu
               id="[anProjectName/].[Get_ProjectClass(anPatternInstance).name.toLower()/].Menu"
               label="[Get_ProjectClass(anPatternInstance).name.toUpperFirst() /]"
               mnemonic="L">
            <command
                  commandId="[anProjectName/].[getProperty('prefix_name')/].[anPatternInstance.Get_ProjectClass().name.toLowerCase()/].command.gendiag"
                  id="[anProjectName/].[getProperty('prefix_name')/].[anPatternInstance.Get_ProjectClass().name.toLowerCase()/].gendiag"
                  label="Generate Model"
                  mnemonic="L"
                  style="push">
				<visibleWhen
                     checkEnabled="true">
                  <with
                        variable="activeMenuSelection">
                     <count
                           value="1">
                     </count>
                     <iterate
                           operator="and">
                        <not>
                           <test
                                 property="org.eclipse.core.resources.projectNature"
                                 value="[anProjectName.toLower()/].[getProperty('prefix_name')/].generalmodularnature">
                           </test>
                        </not>
                     </iterate>
                  </with>
               </visibleWhen>
            </command>           
         </menu>
      </menuContribution>
      <menuContribution
            allPopups="true"
            class="[anProjectName.toLower()/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/][getProperty('prefix_name')/].CreateMenu"
            locationURI="popup:org.eclipse.ui.popup.any?after=group.new">
         <menu
               id="New"
               label="New [Get_ProjectClass(anPatternInstance).name.toUpperFirst() /]"
               mnemonic="L">
            <visibleWhen
                  checkEnabled="true">
               <with
                     variable="activeMenuSelection">
                  <count
                        value="1">
                  </count>
                  <iterate
                        operator="and">
                     <test
                           property="org.eclipse.core.resources.projectNature"
                           value="[anProjectName/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/][getProperty('prefix_name')/].ModularNature">
                     </test>
                  </iterate>
               </with>
            </visibleWhen>
         </menu>        
      </menuContribution>
	  <!-- OPEN WITH COMMANDId-->
	  <menuContribution
            allPopups="true"
            class="[anProjectName.toLower()/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/][getProperty('prefix_name')/].OpenWithMenu"
            locationURI="popup:org.eclipse.ui.popup.any?after=group.new">
         <menu
               id="OpenWith"
               label="Open With">
            <visibleWhen
                  checkEnabled="true">
               <with
                     variable="1">
                  <and>
                     <test
                           property="org.eclipse.core.resources.projectNature"
                           value="[anProjectName/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/][getProperty('prefix_name')/].ModularNature">
                     </test>
                  </and>
               </with>
            </visibleWhen>
         </menu>
      </menuContribution>
   </extension>	
	<!-- COMMANDS-->
	 <extension
         point="org.eclipse.ui.commands">
      <command
            id="[anProjectName/].[getProperty('prefix_name')/].[anPatternInstance.Get_ProjectClass().name.toLowerCase()/].command.gendiag"
            name="Generate Model">
      </command>     
   </extension>
   <!-- HANDLERS-->
	<extension
         point="org.eclipse.ui.handlers">
      <handler
            class="[anProjectName.toLower()/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/][getProperty('prefix_name')/].actions.GenerateModel"
            commandId="[anProjectName/].[getProperty('prefix_name')/].[anPatternInstance.Get_ProjectClass().name.toLowerCase()/].command.gendiag">
      </handler>     
   </extension>
   <!-- MODEL CROSS REFERENCES -->
    <extension
       point="org.model.references.definition.ext">
    <client
          Id="[Get_ProjectClass(anPatternInstance).name/]ModularCrossReferences"
          class="[anProjectName.toLower()/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/][getProperty('prefix_name')/].editors.[Get_ProjectClass(anPatternInstance).name/]ModularCrossReferences">
    </client>
   </extension>
   <!-- MODEL PAGE  PREFERENCES -->
    <extension
       point="org.eclipse.ui.preferencePages">
    <page
          class="[anProjectName.toLower()/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/][getProperty('prefix_name')/].preferences.[Get_ProjectClass(anPatternInstance).name/]PreferencePage"
          id="[anProjectName.toLower()/].[getProperty('prefix_name')/].preferences.[Get_ProjectClass(anPatternInstance).name/]PreferencePage"
          name="[Get_ProjectClass(anPatternInstance).name/] Preferences">
    </page>
 </extension>
 <!-- MODEL PAGE  PREFERENCES INITIALIZER-->
 <extension
       point="org.eclipse.core.runtime.preferences">
    <initializer
          class="[anProjectName.toLower()/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/][getProperty('prefix_name')/].preferences.[Get_ProjectClass(anPatternInstance).name/]PreferenceInitializer">
    </initializer>
 </extension>	
 <!-- INITIALIZER ON START UP-->
 <extension
       point="org.eclipse.ui.startup">
    <startup
          class="[anProjectName.toLower()/].[anPatternInstance.Get_ProjectClassRoleInstance().element.name.toLowerCase()/][getProperty('prefix_name')/].Init">
    </startup>
 </extension> 
</plugin> 	
[/file]
[/template]
